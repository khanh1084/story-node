----------------1----------------
sudo apt update -y
sudo apt-get update -y
sudo apt install curl git make jq build-essential gcc unzip wget lz4 aria2 -y
sudo apt update && sudo apt upgrade -y 
sudo do-release-upgrade
 
----------------2----------------
wget https://story-geth-binaries.s3.us-west-1.amazonaws.com/geth-public/geth-linux-amd64-0.9.2-ea9f0d2.tar.gz
tar -xzvf geth-linux-amd64-0.9.2-ea9f0d2.tar.gz
[ ! -d "$HOME/go/bin" ] && mkdir -p $HOME/go/bin
if ! grep -q "$HOME/go/bin" $HOME/.bash_profile; then
  echo 'export PATH=$PATH:$HOME/go/bin' >> $HOME/.bash_profile
fi
sudo cp geth-linux-amd64-0.9.2-ea9f0d2/geth $HOME/go/bin/story-geth
source $HOME/.bash_profile
story-geth version
 
----------------3----------------
wget https://story-geth-binaries.s3.us-west-1.amazonaws.com/story-public/story-linux-amd64-0.9.11-2a25df1.tar.gz
tar -xzvf story-linux-amd64-0.9.11-2a25df1.tar.gz
[ ! -d "$HOME/go/bin" ] && mkdir -p $HOME/go/bin
if ! grep -q "$HOME/go/bin" $HOME/.bash_profile; then
  echo 'export PATH=$PATH:$HOME/go/bin' >> $HOME/.bash_profile
fi
sudo cp story-linux-amd64-0.9.11-2a25df1/story $HOME/go/bin/story
source $HOME/.bash_profile
story version
 
----------------4----------------
story init --network iliad --moniker "Your_moniker_name"
 
story init --network iliad
 
----------------5----------------
sudo tee /etc/systemd/system/story-geth.service > /dev/null <<EOF
[Unit]
Description=Story Geth Client
After=network.target
 
[Service]
User=root
ExecStart=/root/go/bin/story-geth --iliad --syncmode full
Restart=on-failure
RestartSec=3
LimitNOFILE=4096
 
[Install]
WantedBy=multi-user.target
EOF
 
----------------6----------------
sudo tee /etc/systemd/system/story.service > /dev/null <<EOF
[Unit]
Description=Story Consensus Client
After=network.target
 
[Service]
User=root
ExecStart=/root/go/bin/story run
Restart=on-failure
RestartSec=3
LimitNOFILE=4096
 
[Install]
WantedBy=multi-user.target
EOF
 
----------------7----------------
sudo systemctl daemon-reload && \
sudo systemctl start story-geth && \
sudo systemctl enable story-geth && \
sudo systemctl status story-geth
 
----------------8----------------
sudo systemctl daemon-reload && \
sudo systemctl start story && \
sudo systemctl enable story && \
sudo systemctl status story
 
----------------9----------------
sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \"$(curl -sS https://story-testnet-rpc.polkachu.com/net_info | jq -r '.result.peers[] | "\(.node_info.id)@\(.remote_ip):\(.node_info.listen_addr)"' | awk -F ':' '{print $1":"$(NF)}' | paste -sd, -)\"/" $HOME/.story/story/config/config.toml
 
----------------10----------------
sudo systemctl restart story
sudo systemctl restart story-geth
 
----------------11----------------
sudo journalctl -u story-geth -f -o cat
 
----------------12----------------
sudo journalctl -u story -f -o cat
 
----------------13----------------
curl localhost:26657/status | jq
 
----------------14----------------
curl -s localhost:26657/status | jq .result.sync_info.latest_block_height
 
----------------15----------------
sudo systemctl stop story
sudo systemctl stop story-geth
 
----------------16----------------
sudo apt-get install wget lz4 -y
 
wget -O geth_snapshot.lz4 https://snapshots.mandragora.io/geth_snapshot.lz4
wget -O story_snapshot.lz4 https://snapshots.mandragora.io/story_snapshot.lz4
 
sudo systemctl stop story-geth
sudo systemctl stop story
 
sudo cp $HOME/.story/story/data/priv_validator_state.json $HOME/.story/priv_validator_state.json.backup
 
sudo rm -rf $HOME/.story/geth/iliad/geth/chaindata
sudo rm -rf $HOME/.story/story/data
 
lz4 -c -d geth_snapshot.lz4 | tar -x -C $HOME/.story/geth/iliad/geth
lz4 -c -d story_snapshot.lz4 | tar -x -C $HOME/.story/story
 
sudo rm -v geth_snapshot.lz4
sudo rm -v story_snapshot.lz4
 
sudo cp $HOME/.story/priv_validator_state.json.backup $HOME/.story/story/data/priv_validator_state.json
 
sudo systemctl start story-geth
sudo systemctl start story
 
----------------16----------------
curl localhost:26657/status | jq
 
----------------17----------------
story validator export --export-evm-key
 
----------------18----------------
cat /root/.story/story/config/private_key.txt
or
ls -l /root/.story/story/config/private_key.txt
 
----------------19----------------
story validator export --export-evm-key --evm-key-path .env

----------------20----------------
story validator create --stake 500000000000000000
 
----------------21----------------
cd ~/.story/story/config
 
cat priv_validator_key.json | grep address

----------------1----------------
sudo apt update
sudo apt-get update
sudo apt install curl git make jq build-essential gcc unzip wget lz4 aria2 -y
sudo apt update && sudo apt upgrade
sudo do-release-upgrade
 
----------------2----------------
wget https://story-geth-binaries.s3.us-west-1.amazonaws.com/geth-public/geth-linux-amd64-0.9.2-ea9f0d2.tar.gz
tar -xzvf geth-linux-amd64-0.9.2-ea9f0d2.tar.gz
[ ! -d "$HOME/go/bin" ] && mkdir -p $HOME/go/bin
if ! grep -q "$HOME/go/bin" $HOME/.bash_profile; then
  echo 'export PATH=$PATH:$HOME/go/bin' >> $HOME/.bash_profile
fi
sudo cp geth-linux-amd64-0.9.2-ea9f0d2/geth $HOME/go/bin/story-geth
source $HOME/.bash_profile
story-geth version
 
----------------3----------------
wget https://story-geth-binaries.s3.us-west-1.amazonaws.com/story-public/story-linux-amd64-0.9.11-2a25df1.tar.gz
tar -xzvf story-linux-amd64-0.9.11-2a25df1.tar.gz
[ ! -d "$HOME/go/bin" ] && mkdir -p $HOME/go/bin
if ! grep -q "$HOME/go/bin" $HOME/.bash_profile; then
  echo 'export PATH=$PATH:$HOME/go/bin' >> $HOME/.bash_profile
fi
sudo cp story-linux-amd64-0.9.11-2a25df1/story $HOME/go/bin/story
source $HOME/.bash_profile
story version
 
----------------4----------------
story init --network iliad --moniker "Your_moniker_name"
 
story init --network iliad
 
----------------5----------------
sudo tee /etc/systemd/system/story-geth.service > /dev/null <<EOF
[Unit]
Description=Story Geth Client
After=network.target
 
[Service]
User=root
ExecStart=/root/go/bin/story-geth --iliad --syncmode full
Restart=on-failure
RestartSec=3
LimitNOFILE=4096
 
[Install]
WantedBy=multi-user.target
EOF
 
----------------6----------------
sudo tee /etc/systemd/system/story.service > /dev/null <<EOF
[Unit]
Description=Story Consensus Client
After=network.target
 
[Service]
User=root
ExecStart=/root/go/bin/story run
Restart=on-failure
RestartSec=3
LimitNOFILE=4096
 
[Install]
WantedBy=multi-user.target
EOF
 
----------------7----------------
sudo systemctl daemon-reload && \
sudo systemctl start story-geth && \
sudo systemctl enable story-geth && \
sudo systemctl status story-geth
 
----------------8----------------
sudo systemctl daemon-reload && \
sudo systemctl start story && \
sudo systemctl enable story && \
sudo systemctl status story
 
----------------9----------------
sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \"$(curl -sS https://story-testnet-rpc.polkachu.com/net_info | jq -r '.result.peers[] | "\(.node_info.id)@\(.remote_ip):\(.node_info.listen_addr)"' | awk -F ':' '{print $1":"$(NF)}' | paste -sd, -)\"/" $HOME/.story/story/config/config.toml
 
----------------10----------------
sudo systemctl restart story
sudo systemctl restart story-geth
 
----------------11----------------
sudo journalctl -u story-geth -f -o cat
 
----------------12----------------
sudo journalctl -u story -f -o cat
 
----------------13----------------
curl localhost:26657/status | jq
 
----------------14----------------
curl -s localhost:26657/status | jq .result.sync_info.latest_block_height
 
----------------15----------------
sudo systemctl stop story
sudo systemctl stop story-geth
 
----------------16----------------
sudo apt-get install wget lz4 -y
 
wget -O geth_snapshot.lz4 https://snapshots.mandragora.io/geth_snapshot.lz4
wget -O story_snapshot.lz4 https://snapshots.mandragora.io/story_snapshot.lz4
 
sudo systemctl stop story-geth
sudo systemctl stop story
 
sudo cp $HOME/.story/story/data/priv_validator_state.json $HOME/.story/priv_validator_state.json.backup
 
sudo rm -rf $HOME/.story/geth/iliad/geth/chaindata
sudo rm -rf $HOME/.story/story/data
 
lz4 -c -d geth_snapshot.lz4 | tar -x -C $HOME/.story/geth/iliad/geth
lz4 -c -d story_snapshot.lz4 | tar -x -C $HOME/.story/story
 
sudo rm -v geth_snapshot.lz4
sudo rm -v story_snapshot.lz4
 
sudo cp $HOME/.story/priv_validator_state.json.backup $HOME/.story/story/data/priv_validator_state.json
 
sudo systemctl start story-geth
sudo systemctl start story
 
----------------16----------------
curl localhost:26657/status | jq
 
----------------17----------------
story validator export --export-evm-key
 
----------------18----------------
cat /root/.story/story/config/private_key.txt
or
ls -l /root/.story/story/config/private_key.txt
 
----------------19----------------
story validator export --export-evm-key --evm-key-path .env

----------------20----------------
story validator create --stake 500000000000000000
 
----------------21----------------
cd ~/.story/story/config
 
cat priv_validator_key.json | grep address


tmux attach -t mysession
tmux new -s mysession

bash <(curl -s https://raw.githubusercontent.com/alikome/Story-Protocol-Node/main/storyTool.sh)

sudo journalctl -u story -f -o cat
sudo journalctl -u story-geth -f -o cat


curl localhost:26657/status | jq

1  root@81.0.246.245 hoptacxa123 ok
2  root@81.0.247.187 hoptacxa123 ok
3  root@157.173.121.2 hoptacxa123 ok
4  root@157.173.121.3 hoptacxa123 ok
5  root@157.173.121.4 hoptacxa123 ok
6  root@157.173.119.101 Loanham1 ok
7  root@157.173.119.102 Loanham1 ok
8  root@157.173.119.103 Loanham1 ok
9  root@157.173.119.105 Loanham1 ok
10 root@157.173.119.104 Loanham1 ok
11 root@45.85.249.233 LeHuyDucAnh157a@ ok
12 root@157.173.118.9  LeHuyDucAnh157 ok
13 root@157.173.118.10 LeHuyDucAnh157 ok
14 root@157.173.118.12 LeHuyDucAnh157 ok
15 root@89.117.57.15 Hoptacxa157a@ ok


curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
source ~/.bashrc

sudo systemctl stop story-geth
sudo systemctl stop story
# Download and extract geth
wget https://story-geth-binaries.s3.us-west-1.amazonaws.com/geth-public/geth-linux-amd64-0.9.3-b224fdf.tar.gz
tar -xzvf geth-linux-amd64-0.9.3-b224fdf.tar.gz
[ ! -d "$HOME/go/bin" ] && mkdir -p $HOME/go/bin
if ! grep -q "$HOME/go/bin" $HOME/.bash_profile; then
  echo 'export PATH=$PATH:$HOME/go/bin' >> $HOME/.bash_profile
fi
sudo rm -f geth-linux-amd64-0.9.3-b224fdf.tar.gz
sudo cp geth-linux-amd64-0.9.3-b224fdf/geth $HOME/go/bin/story-geth
source $HOME/.bash_profile
story-geth version

# Download and extract story
wget https://story-geth-binaries.s3.us-west-1.amazonaws.com/story-public/story-linux-amd64-0.10.1-57567e5.tar.gz
tar -xzvf story-linux-amd64-0.10.1-57567e5.tar.gz
[ ! -d "$HOME/go/bin" ] && mkdir -p $HOME/go/bin
if ! grep -q "$HOME/go/bin" $HOME/.bash_profile; then
  echo 'export PATH=$PATH:$HOME/go/bin' >> $HOME/.bash_profile
fi
sudo rm -f story-linux-amd64-0.10.1-57567e5.tar.gz
sudo cp story-linux-amd64-0.10.1-57567e5/story $HOME/go/bin/story
source $HOME/.bash_profile
sudo rm -f /usr/bin/story
sudo ln -sf $HOME/go/bin/story /usr/local/bin/story
story version
sudo systemctl daemon-reload
sudo systemctl start story-geth
sudo systemctl enable story-geth

sudo systemctl start story
sudo systemctl enable story


# install go

# Download the latest Go tarball
wget https://go.dev/dl/go1.23.2.linux-amd64.tar.gz

# Extract the tarball to /usr/local
sudo tar -C /usr/local -xzf go1.23.2.linux-amd64.tar.gz
sudo rm -f  go1.23.2.linux-amd64.tar.gz
# Set up environment variables
echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.profile
echo 'export GOPATH=$HOME/go' >> ~/.profile
echo 'export PATH=$PATH:$GOPATH/bin' >> ~/.profile

# Apply the changes
source ~/.profile

# Verify the installation
go version



# install auto story update 
# update story && \
cd $HOME && \
rm -rf story && \
git clone https://github.com/piplabs/story && \
cd $HOME/story && \
git checkout v0.11.0 && \
go build -o story ./client && \
old_bin_path=$(which story) && \
home_path=$HOME && \
rpc_port=$(grep -m 1 -oP '^laddr = "\K[^"]+' "$HOME/.story/story/config/config.toml" | cut -d ':' -f 3) && \
[[ -z "$rpc_port" ]] && rpc_port=$(grep -oP 'node = "tcp://[^:]+:\K\d+' "$HOME/.story/story/config/client.toml") ; \
tmux new -s story-upgrade "sudo bash -c 'curl -s https://raw.githubusercontent.com/itrocket-team/testnet_guides/main/utils/autoupgrade/upgrade.sh | bash -s -- -u \"1325860\" -b story -n \"$HOME/story/story\" -o \"$old_bin_path\" -h \"$home_path\" -p \"undefined\" -r \"$rpc_port\"'"

#Auto snapshot 
source <(curl -s https://itrocket.net/api/testnet/story/autosnap/)


